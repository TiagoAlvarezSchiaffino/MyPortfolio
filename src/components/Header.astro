---
import ThemeToggle from "./ThemeToggle.astro"

const navItems = [
  {
    title: 'Work',
    url: '/#work',
    label: "work"
  },
  {
    title: 'Projects',
    url: '/#projects',
    label: "projects"
  },
  {
    title: 'About',
    url: '/#about',
    label: "about"
  },
  {
    title: 'Skills',
    url: '/#skills',
    label: "skills"
  },
  {
    title: 'Contact',
    url: '/#contact',
    label: "contact"
  }
]
---

<script>
function createNavElement(link) {
  const aElement = document.createElement('a')
  aElement.classList.add(
    'relative',
    'block',
    'px-2',
    'py-2',
    'transition',
    'hover:text-yellow-500', 
    'dark:hover:text-yellow-400'
  )
  aElement.href = link.url
  aElement.textContent = link.title
  return aElement
}

const $navContainer = document.querySelector('header nav')

if ($navContainer && $navContainer.children.length === 0) {
  navItems.forEach(link => {
    const navElement = createNavElement(link)
    $navContainer.appendChild(navElement)
  })
}

const $navAElements: Element[] = [...document.querySelectorAll('header nav a')]
const sectionElements: HTMLDivElement[] = $navAElements.map(a => {
  const selectionForSection = a.getAttribute('href')?.substring(1)
  return document.querySelector(selectionForSection || '') as HTMLDivElement
})

window.addEventListener('scroll', () => {
  let activeSectionIndex = -1

  sectionElements.forEach((sectionElement, index) => {
    if (!sectionElement) return

    const selectionTop = sectionElement.offsetTop - 150
    const selectionBottom = selectionTop + sectionElement.clientHeight
    const isSectionActive = window.scrollY >= selectionTop && window.scrollY < selectionBottom

    if (isSectionActive) {
      activeSectionIndex = index
    }
  })

  $navAElements.forEach((a, index) => {
    const isActive = index === activeSectionIndex
    if (isActive) {
    a.classList.add('bg-white/30', 'dark:bg-gray-800/30');
  } else {
    a.classList.remove('bg-white/30', 'dark:bg-gray-800/30');
  }
  })
})
</script>

<header
  class="fixed top-0 flex justify-center items-center w-full mx-auto z-10 mt-2"
>
  <nav class={`
    border border-black
    px-3
    text-sm font-medium
    flex justify-center items-center
    bg-white/50
    backdrop-blur-2xl
  `}
>
  {
    navItems.map((link) => (
      <a 
        class="relative block hover:bg-white/20 dark:hover:bg-black/10 rounded-full px-2 py-2 transition sm:px-3  sm:text-base hover:text-yellow-500 dark:hover:text-yellow-400"
        aria-label={link.label}
        href={link.url}
        >
          {link.title}
        </a>
      ))
    }
    <ThemeToggle />
  </nav>
</header>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  @keyframes nav-shadown {
    to {
      @apply shadow-lg ring-1 backdrop-blur bg-gray-300/60 dark:bg-gray-800/60 ring-white/10;
    }
  }
</style>